/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  EventEscrow,
  EventEscrowInterface,
} from "../../contracts/EventEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_eventLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ensRegistry",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Funded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "ensName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "badgeLabel",
        type: "string",
      },
    ],
    name: "WinnerPaid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistry",
    outputs: [
      {
        internalType: "contract IENSRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventLabel",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "winnerENS",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "badgeLabels",
        type: "string[]",
      },
      {
        internalType: "bool",
        name: "strictExact",
        type: "bool",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "organizer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "resolveENS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRemainder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526001600955604051620026f4380380620026f48339810160408190526200002b91620001d1565b826040518060400160405280600a8152602001694576656e74426164676560b01b8152506040518060400160405280600381526020016222ab2160e91b81525081600090816200007c91906200035d565b5060016200008b82826200035d565b5050506001600160a01b038116620000bd57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000c8816200014c565b5060016007556001600160a01b03831660a0526008620000e983826200035d565b506001600160a01b03811660805234156200014357826001600160a01b03167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524346040516200013a91815260200190565b60405180910390a25b50505062000429565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001b657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215620001e757600080fd5b620001f2846200019e565b602085810151919450906001600160401b03808211156200021257600080fd5b818701915087601f8301126200022757600080fd5b8151818111156200023c576200023c620001bb565b604051601f8201601f19908116603f01168101908382118183101715620002675762000267620001bb565b816040528281528a868487010111156200028057600080fd5b600093505b82841015620002a4578484018601518185018701529285019262000285565b6000868483010152809750505050505050620002c3604085016200019e565b90509250925092565b600181811c90821680620002e157607f821691505b6020821081036200030257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000358576000816000526020600020601f850160051c81016020861015620003335750805b601f850160051c820191505b8181101562000354578281556001016200033f565b5050505b505050565b81516001600160401b03811115620003795762000379620001bb565b62000391816200038a8454620002cc565b8462000308565b602080601f831160018114620003c95760008415620003b05750858301515b600019600386901b1c1916600185901b17855562000354565b600085815260208120601f198616915b82811015620003fa57888601518255948401946001909101908401620003d9565b5085821015620004195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05161228262000472600039600081816102c70152818161049001528181610c9c01528181610d200152610e020152600081816103730152610a2b01526122826000f3fe6080604052600436106101435760003560e01c806370a08231116100b6578063a22cb4651161006f578063a22cb465146103dd578063b60d4288146103fd578063b88d4fde14610405578063c87b56dd14610425578063e985e9c514610445578063f2fde38b1461046557600080fd5b806370a082311461031e578063715018a61461034c5780637d73b231146103615780638b9b1cbd146103955780638da5cb5b146103aa57806395d89b41146103c857600080fd5b806323b872dd1161010857806323b872dd1461025557806342842e0e146102755780635734c0111461029557806361203265146102b55780636352211e146102e9578063688022561461030957600080fd5b8062d1b6021461018457806301ffc9a7146101a657806306fdde03146101db578063081812fc146101fd578063095ea7b31461023557600080fd5b3661017f5760405134815233907f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5249060200160405180910390a2005b600080fd5b34801561019057600080fd5b506101a461019f366004611864565b610485565b005b3480156101b257600080fd5b506101c66101c1366004611925565b610834565b60405190151581526020015b60405180910390f35b3480156101e757600080fd5b506101f0610886565b6040516101d29190611999565b34801561020957600080fd5b5061021d6102183660046119ac565b610918565b6040516001600160a01b0390911681526020016101d2565b34801561024157600080fd5b506101a46102503660046119da565b610941565b34801561026157600080fd5b506101a4610270366004611a06565b610950565b34801561028157600080fd5b506101a4610290366004611a06565b6109db565b3480156102a157600080fd5b5061021d6102b0366004611ad3565b6109fb565b3480156102c157600080fd5b5061021d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f557600080fd5b5061021d6103043660046119ac565b610b9c565b34801561031557600080fd5b506101f0610ba7565b34801561032a57600080fd5b5061033e610339366004611b1c565b610c35565b6040519081526020016101d2565b34801561035857600080fd5b506101a4610c7d565b34801561036d57600080fd5b5061021d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a157600080fd5b506101a4610c91565b3480156103b657600080fd5b506006546001600160a01b031661021d565b3480156103d457600080fd5b506101f0610ddd565b3480156103e957600080fd5b506101a46103f8366004611b39565b610dec565b6101a4610df7565b34801561041157600080fd5b506101a4610420366004611b6e565b610eb1565b34801561043157600080fd5b506101f06104403660046119ac565b610ec9565b34801561045157600080fd5b506101c6610460366004611bee565b610fe8565b34801561047157600080fd5b506101a4610480366004611b1c565b611016565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104d65760405162461bcd60e51b81526004016104cd90611c27565b60405180910390fd5b6104de611054565b85841480156104ec57508382145b61052a5760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016104cd565b6000805b858110156105645786868281811061054857610548611c4e565b905060200201358261055a9190611c7a565b915060010161052e565b5081156105b0574781146105ab5760405162461bcd60e51b815260206004820152600e60248201526d73756d20213d2062616c616e636560901b60448201526064016104cd565b6105f0565b478111156105f05760405162461bcd60e51b815260206004820152600d60248201526c73756d203e2062616c616e636560981b60448201526064016104cd565b60005b8781101561081f57600061065e8a8a8481811061061257610612611c4e565b90506020028101906106249190611c8d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109fb92505050565b90506000816001600160a01b031689898581811061067e5761067e611c4e565b9050602002013560405160006040518083038185875af1925050503d80600081146106c5576040519150601f19603f3d011682016040523d82523d6000602084013e6106ca565b606091505b505090508061070d5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016104cd565b600980546000918261071e83611cd4565b91905055905061072e838261107e565b87878581811061074057610740611c4e565b90506020028101906107529190611c8d565b6000838152600a602052604090209161076c919083611d6f565b50826001600160a01b03167fd02f7ac75c0dc38504dd95acb77f8ecb51b815285ac1d09a7641389904b4eed58d8d878181106107aa576107aa611c4e565b90506020028101906107bc9190611c8d565b8d8d898181106107ce576107ce611c4e565b90506020020135858d8d8b8181106107e8576107e8611c4e565b90506020028101906107fa9190611c8d565b60405161080c96959493929190611e58565b60405180910390a25050506001016105f3565b505061082b6001600755565b50505050505050565b60006001600160e01b031982166380ac58cd60e01b148061086557506001600160e01b03198216635b5e139f60e01b145b8061088057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461089590611ced565b80601f01602080910402602001604051908101604052809291908181526020018280546108c190611ced565b801561090e5780601f106108e35761010080835404028352916020019161090e565b820191906000526020600020905b8154815290600101906020018083116108f157829003601f168201915b5050505050905090565b600061092382611098565b506000828152600460205260409020546001600160a01b0316610880565b61094c8282336110d1565b5050565b6001600160a01b03821661097a57604051633250574960e11b8152600060048201526024016104cd565b60006109878383336110de565b9050836001600160a01b0316816001600160a01b0316146109d5576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104cd565b50505050565b6109f683838360405180602001604052806000815250610eb1565b505050565b600080610a07836111d7565b604051630178b8bf60e01b8152600481018290529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630178b8bf90602401602060405180830381865afa158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a969190611e98565b90506001600160a01b038116610ae15760405162461bcd60e51b815260206004820152601060248201526f22a7299d103737903932b9b7b63b32b960811b60448201526064016104cd565b604051631d9dabef60e11b8152600481018390526000906001600160a01b03831690633b3b57de90602401602060405180830381865afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190611e98565b90506001600160a01b038116610b945760405162461bcd60e51b815260206004820152600c60248201526b22a7299d1037379030b2323960a11b60448201526064016104cd565b949350505050565b600061088082611098565b60088054610bb490611ced565b80601f0160208091040260200160405190810160405280929190818152602001828054610be090611ced565b8015610c2d5780601f10610c0257610100808354040283529160200191610c2d565b820191906000526020600020905b815481529060010190602001808311610c1057829003601f168201915b505050505081565b60006001600160a01b038216610c61576040516322718ad960e21b8152600060048201526024016104cd565b506001600160a01b031660009081526003602052604090205490565b610c856112c6565b610c8f60006112f3565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd95760405162461bcd60e51b81526004016104cd90611c27565b610ce1611054565b4780610d1c5760405162461bcd60e51b815260206004820152600a6024820152696e6f2062616c616e636560b01b60448201526064016104cd565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405160006040518083038185875af1925050503d8060008114610d89576040519150601f19603f3d011682016040523d82523d6000602084013e610d8e565b606091505b5050905080610dd15760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104cd565b5050610c8f6001600755565b60606001805461089590611ced565b61094c338383611345565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e3f5760405162461bcd60e51b81526004016104cd90611c27565b60003411610e7a5760405162461bcd60e51b81526020600482015260086024820152676e6f2076616c756560c01b60448201526064016104cd565b60405134815233907f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5249060200160405180910390a2565b610ebc848484610950565b6109d533858585856113e4565b6060610ed482611098565b506000828152600a602052604081208054610eee90611ced565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1a90611ced565b8015610f675780601f10610f3c57610100808354040283529160200191610f67565b820191906000526020600020905b815481529060010190602001808311610f4a57829003601f168201915b505050505090506000600882604051602001610f84929190611f44565b6040516020818303038152906040529050600081600883604051602001610fad93929190611f78565b604051602081830303815290604052905080604051602001610fcf9190612183565b6040516020818303038152906040529350505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61101e6112c6565b6001600160a01b03811661104857604051631e4fbdf760e01b8152600060048201526024016104cd565b611051816112f3565b50565b60026007540361107757604051633ee5aeb560e01b815260040160405180910390fd5b6002600755565b61094c82826040518060200160405280600081525061150f565b6000818152600260205260408120546001600160a01b03168061088057604051637e27328960e01b8152600481018490526024016104cd565b6109f68383836001611527565b6000828152600260205260408120546001600160a01b039081169083161561110b5761110b81848661162d565b6001600160a01b0381161561114957611128600085600080611527565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611178576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b8051600090829082036111ed5750600092915050565b80516000905b80156112be57805b60008111801561123a5750836112126001836121c8565b8151811061122257611222611c4e565b6020910101516001600160f81b031916601760f91b14155b156112515780611249816121db565b9150506111fb565b6000611267858361126281876121c8565b611691565b80516020918201206040805192830187905282018190529150606001604051602081830303815290604052805190602001209350816000036112aa5750506112be565b6112b56001836121c8565b925050506111f3565b509392505050565b6006546001600160a01b03163314610c8f5760405163118cdaa760e01b81523360048201526024016104cd565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661137757604051630b61174360e31b81526001600160a01b03831660048201526024016104cd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561150857604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906114269088908890879087906004016121f2565b6020604051808303816000875af1925050508015611461575060408051601f3d908101601f1916820190925261145e9181019061222f565b60015b6114ca573d80801561148f576040519150601f19603f3d011682016040523d82523d6000602084013e611494565b606091505b5080516000036114c257604051633250574960e11b81526001600160a01b03851660048201526024016104cd565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461150657604051633250574960e11b81526001600160a01b03851660048201526024016104cd565b505b5050505050565b611519838361173b565b6109f63360008585856113e4565b808061153b57506001600160a01b03821615155b156115fd57600061154b84611098565b90506001600160a01b038316158015906115775750826001600160a01b0316816001600160a01b031614155b801561158a57506115888184610fe8565b155b156115b35760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104cd565b81156115fb5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6116388383836117a0565b6109f6576001600160a01b03831661166657604051637e27328960e01b8152600481018290526024016104cd565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104cd565b60608167ffffffffffffffff8111156116ac576116ac611a47565b6040519080825280601f01601f1916602001820160405280156116d6576020820181803683370190505b50905060005b828110156112be57846116ef8286611c7a565b815181106116ff576116ff611c4e565b602001015160f81c60f81b82828151811061171c5761171c611c4e565b60200101906001600160f81b031916908160001a9053506001016116dc565b6001600160a01b03821661176557604051633250574960e11b8152600060048201526024016104cd565b6000611773838360006110de565b90506001600160a01b038116156109f6576040516339e3563760e11b8152600060048201526024016104cd565b60006001600160a01b03831615801590610b945750826001600160a01b0316846001600160a01b031614806117da57506117da8484610fe8565b80610b945750506000908152600460205260409020546001600160a01b03908116911614919050565b60008083601f84011261181557600080fd5b50813567ffffffffffffffff81111561182d57600080fd5b6020830191508360208260051b850101111561184857600080fd5b9250929050565b8035801515811461185f57600080fd5b919050565b60008060008060008060006080888a03121561187f57600080fd5b873567ffffffffffffffff8082111561189757600080fd5b6118a38b838c01611803565b909950975060208a01359150808211156118bc57600080fd5b6118c88b838c01611803565b909750955060408a01359150808211156118e157600080fd5b506118ee8a828b01611803565b909450925061190190506060890161184f565b905092959891949750929550565b6001600160e01b03198116811461105157600080fd5b60006020828403121561193757600080fd5b81356119428161190f565b9392505050565b60005b8381101561196457818101518382015260200161194c565b50506000910152565b60008151808452611985816020860160208601611949565b601f01601f19169290920160200192915050565b602081526000611942602083018461196d565b6000602082840312156119be57600080fd5b5035919050565b6001600160a01b038116811461105157600080fd5b600080604083850312156119ed57600080fd5b82356119f8816119c5565b946020939093013593505050565b600080600060608486031215611a1b57600080fd5b8335611a26816119c5565b92506020840135611a36816119c5565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a7857611a78611a47565b604051601f8501601f19908116603f01168101908282118183101715611aa057611aa0611a47565b81604052809350858152868686011115611ab957600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611ae557600080fd5b813567ffffffffffffffff811115611afc57600080fd5b8201601f81018413611b0d57600080fd5b610b9484823560208401611a5d565b600060208284031215611b2e57600080fd5b8135611942816119c5565b60008060408385031215611b4c57600080fd5b8235611b57816119c5565b9150611b656020840161184f565b90509250929050565b60008060008060808587031215611b8457600080fd5b8435611b8f816119c5565b93506020850135611b9f816119c5565b925060408501359150606085013567ffffffffffffffff811115611bc257600080fd5b8501601f81018713611bd357600080fd5b611be287823560208401611a5d565b91505092959194509250565b60008060408385031215611c0157600080fd5b8235611c0c816119c5565b91506020830135611c1c816119c5565b809150509250929050565b6020808252600d908201526c3737ba1037b933b0b734bd32b960991b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561088057610880611c64565b6000808335601e19843603018112611ca457600080fd5b83018035915067ffffffffffffffff821115611cbf57600080fd5b60200191503681900382131561184857600080fd5b600060018201611ce657611ce6611c64565b5060010190565b600181811c90821680611d0157607f821691505b602082108103611d2157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109f6576000816000526020600020601f850160051c81016020861015611d505750805b601f850160051c820191505b8181101561150657828155600101611d5c565b67ffffffffffffffff831115611d8757611d87611a47565b611d9b83611d958354611ced565b83611d27565b6000601f841160018114611dcf5760008515611db75750838201355b600019600387901b1c1916600186901b178355611508565b600083815260209020601f19861690835b82811015611e005786850135825560209485019460019092019101611de0565b5086821015611e1d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b608081526000611e6c60808301888a611e2f565b8660208401528560408401528281036060840152611e8b818587611e2f565b9998505050505050505050565b600060208284031215611eaa57600080fd5b8151611942816119c5565b60008154611ec281611ced565b60018281168015611eda5760018114611eef57611f1e565b60ff1984168752821515830287019450611f1e565b8560005260208060002060005b85811015611f155781548a820152908401908201611efc565b50505082870194505b5050505092915050565b60008151611f3a818560208601611949565b9290920192915050565b6000611f508285611eb5565b6201016960ed1b81528351611f6c816003840160208801611949565b01600301949350505050565b683d913730b6b2911d1160b91b81528351600090611f9d816009850160208901611949565b7f222c226465736372697074696f6e223a2257696e6e657220626164676520666f60099184019182015261039160f51b6029820152611fdf602b820186611eb5565b7f222c22696d616765223a22646174613a696d6167652f7376672b786d6c3b7574815262198e0b60ea1b60208201527f3c73766720786d6c6e733d253237687474703a2f2f7777772e77332e6f72672f60238201527f323030302f7376672532372077696474683d253237343030253237206865696760438201526c343a1e92991b9a181812991b9f60991b60638201527f3c726563742077696474683d253237343030253237206865696768743d25323760708201527f3430302532372066696c6c3d253237236632663266322532372f3e000000000060908201527f3c7465787420783d253237353025323720793d25323731383025323720666f6e60ab8201527f742d73697a653d25323732302532373e57696e6e65723c2f746578743e00000060cb8201527f3c7465787420783d253237353025323720793d25323732323025323720666f6e60e88201526f3a16b9b4bd329e92991b989b12991b9f60811b6101088201529050612158610118820185611f28565b661e17ba32bc3a1f60c91b8152673c2f7376673e227d60c01b6007820152600f019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b757466382c00000000008152600082516121bb81601b850160208701611949565b91909101601b0192915050565b8181038181111561088057610880611c64565b6000816121ea576121ea611c64565b506000190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122259083018461196d565b9695505050505050565b60006020828403121561224157600080fd5b81516119428161190f56fea2646970667358221220b97dd81afb9737aa86bf61c918fd63453a0c863187e012e069275757e4af529664736f6c63430008180033";

type EventEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventEscrow__factory extends ContractFactory {
  constructor(...args: EventEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _organizer: AddressLike,
    _eventLabel: string,
    _ensRegistry: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _organizer,
      _eventLabel,
      _ensRegistry,
      overrides || {}
    );
  }
  override deploy(
    _organizer: AddressLike,
    _eventLabel: string,
    _ensRegistry: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _organizer,
      _eventLabel,
      _ensRegistry,
      overrides || {}
    ) as Promise<
      EventEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EventEscrow__factory {
    return super.connect(runner) as EventEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventEscrowInterface {
    return new Interface(_abi) as EventEscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EventEscrow {
    return new Contract(address, _abi, runner) as unknown as EventEscrow;
  }
}
